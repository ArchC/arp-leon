#------------------------------------------------------------------
# LEON3 Platform Makefile
#
# author: Rogerio Alves Cardoso
# author: ArchC Team
#         www.archc.org
#
# description: This make file will generate a LEON3
#              platform. This is based on model generated by ArchC
#              ARP. With some modification to support subdirectory
#              in IP folder structure.
#------------------------------------------------------------------

#------------------------------------------------------------------
# NOTE: Edit paths bellow to point to ArchC/SystemC installations
#       and you platform configurations
#------------------------------------------------------------------

export HOST_OS:= linux64

# SystemC installation path
export SYSTEMC :=  /home/max/ArchC/tools/systemc/2.3.1/install

# ArchC installation path
export ARCHC_PATH := /home/max/ArchC/archc/2.2.0/install

# SystemC library path
export LD_LIBRARY_PATH:=$(SYSTEMC)/lib-linux64:$(LD_LIBRARY_PATH)

# TLM installation path (tlm.h)
export TLM_PATH := $(SYSTEMC)/include

# ArchC bin (acsim, accsim) tools
export PATH:=$(ARCHC_PATH)/bin:$(PATH)

export PLATFORM := leon3.01
export ARP:=$(PWD)

# Platform components definitions
include platforms/$(PLATFORM)/defs.arp

#-------------------------------------------------------------------------
# Normaly you don't need to edit the lines bellow
#-------------------------------------------------------------------------

export LIB_DIR:=-L $(SYSTEMC)/lib-$(HOST_OS) -L $(ARCHC_PATH)/lib \
	$(foreach ip, $(IP), -L $(ARP)/ip/$(ip)) \
	$(foreach is, $(IS), -L $(ARP)/is/$(is)) \
	$(foreach wrapper, $(WRAPPER), -L $(ARP)/wrappers/$(wrapper)) \
	$(foreach processor, $(PROCESSOR), -L $(ARP)/processors/$(processor))

export INC_DIR:=-I $(SYSTEMC)/include -I $(ARCHC_PATH)/include/archc -I $(TLM_PATH) \
	$(foreach ip, $(IP), -I $(ARP)/ip/$(ip)) \
	$(foreach is, $(IS), -I $(ARP)/is/$(is)) \
	$(foreach wrapper, $(WRAPPER), -I $(ARP)/wrappers/$(wrapper)) \
	$(foreach processor, $(PROCESSOR), -I $(ARP)/processors/$(processor))

export LIBS:= \
	$(foreach processor, $(PROCESSOR), -l$(processor))\
	$(foreach ip, $(LIB_IP), -l$(ip)) \
	$(foreach is, $(LIB_IS), -l$(is))\
	$(foreach wrapper, $(WRAPPER), -l$(wrapper)) \
	-lsystemc -larchc -lm

export CFLAGS:=-g -O2

export CC:=g++

#------------------------------------------------------------------------
.SILENT:

#------------------------------------------------------------------------
all:
	cd $(ARP)
	for ip in $(IP); do echo Making IP $$ip ...; \
			cd ip/$$ip; $(MAKE) lib; cd $(ARP); done
	for is in $(IS); do echo Making IS $$is ...; \
						cd is/$$is; $(MAKE) lib; cd $(ARP); done
	for wrapper in $(WRAPPER); do \
						echo Making Wrapper $$wrapper ...; \
						cd wrappers/$$wrapper; $(MAKE) lib; \
						cd $(ARP); done
	for processor in $(PROCESSOR); do \
						echo Making Processor $$processor ...;\
						cd processors/$$processor ; $(MAKE) lib ; \
						 cd $(ARP); done
	for sw in $(SW); do \
						echo Making Software $$sw ...; cd sw/$$sw; \
						$(MAKE); cd $(ARP); done
	for sw in $(SW) ; do \
						cp sw/$$sw/*.x platforms/$(PLATFORM) ; done
	echo Making Platform $(PLATFORM)
	cd platforms/$(PLATFORM); $(MAKE)

#-------------------------------------------------------------------------
clean:
	for ipl in $(IP_SUBDIRS) ; do \
			for ip in $(IP); do echo $$ipl/ip/$$ip ... ; done ; \
	done
	cd $(ARP)
	for ip in $(IP) ; do cd ip/$$ip ; \
						$(MAKE) clean ; cd $(ARP); done
	for is in $(IS) ; do cd is/$$is ; \
						$(MAKE) clean ; cd $(ARP); done
	for wrapper in $(WRAPPER); do \
						cd wrappers/$$wrapper; $(MAKE) clean; \
						cd $(ARP); done
	for processor in $(PROCESSOR) ; do \
						cd processors/$$processor ; $(MAKE) clean; \
						cd $(ARP); done
	for sw in $(SW) ; do cd sw/$$sw ; \
						$(MAKE) clean ; cd $(ARP); done
	for sw in $(SW) ; do \
						rm -f platforms/$(PLATFORM)/*.x; cd $(ARP); done
	cd platforms/$(PLATFORM); $(MAKE) clean

#-------------------------------------------------------------------------
distclean:
	cd $(ARP)
	for ip in $(IP) ; do cd ip/$$ip ; \
						$(MAKE) distclean ; cd $(ARP); done
	for is in $(IS) ; do cd is/$$is ; \
						$(MAKE) distclean ; cd $(ARP); done
	for wrapper in $(WRAPPER); do \
						cd wrappers/$$wrapper; $(MAKE) distclean; \
						cd $(ARP); done
	for processor in $(PROCESSOR) ; do \
						cd processors/$$processor ; $(MAKE) distclean; \
						cd $(ARP); done
	for sw in $(SW) ; do cd sw/$$sw ; \
						$(MAKE) distclean ; cd $(ARP); done
	for sw in $(SW) ; do \
						rm -f platforms/$(PLATFORM)/*.x; cd $(ARP); done
	cd platforms/$(PLATFORM); $(MAKE) distclean

#------------------------------------------------------------------------
run: all
	cd $(ARP)
	cd platforms/$(PLATFORM); $(MAKE) run
